export function getContenInfo() {
    return `
   ## 第1章 课程简介
> 对课程做简单的介绍。

## 第2章 资源合并与压缩
> 通过本章，我们学习和理解了web前端的概念，以及性能优化的意义所在，并且通过实战中的压缩与合并，深入理解了减少http请求数和减少http请求资源大小两个优化要点，并且通过实战，帮助学生掌握如何通过网站进行压缩与合并，如果使用半自动化的gulp脚本进行压缩与合并，最终通过优化前后的性能对比，更加量化地去理解了性能...

## 第3章 图片相关的优化
> 通过本章，帮助学员学习和掌握图片相关的优化方法，理解不同图片格式分别是什么以及如果在不同的业务场景中使用不同的图片格式和图片加载方式。

## 第4章 css 和 js 的装载与执行
> 通过本章，帮助学员理解css和js在页面中的加载机制，让学员能初步建立通过理解浏览器渲染机制进行代码优化提升页面访问性能的概念，同时掌握css、js在装载与执行阶段的基础优化。

## 第5章 懒加载与预加载
> 通过本章，帮助学员理解资源加载时机对前端性能优化的影响，同时实战理解懒加载和预加载的实现机制。

## 第6章 重绘与回流
> 通过本章，帮助学员理解高阶的浏览器渲染机制，深入理解浏览器重绘与回流的机制，从而掌握如何深入地从代码层面基于浏览器的渲染机制进行优化。

## 第7章 浏览器存储
> 通过本章，帮助学员理解浏览器存储的核心概念及其在关键业务中的应用，通过浏览器存储，可以在浏览器端建立可控制的缓存机制，从而帮助用户在自己的关键业务上进行相应的优化。

## 第8章 缓存优化
> 通过本章，帮助学员掌握如何使用在线cdn提升静态资源的加载速度，如果使用dns-prefetch，以及如何使用服务端缓存来进行搭建，更加完善的资源请求缓存机制。

## 第9章 SSR（服务端渲染）
> 通过本章，帮助学员了解服务端渲染的核心概念，以及vue如何做服务端渲染，从而让学员更加深入地理解渲染的性能消耗在性能优化中的意义。
  `;
}
